{"version":3,"sources":["../public/data sync /.csv","../public/data/Grape Quality (scenario-A)/features_info.csv","../public/data/Grape Quality (scenario-A)/intervals/knowledge_intervals.csv","../public/data/Grape Quality (scenario-A)/models_data.csv","../public/data/Grape Quality (scenario-A)/models_info.csv","../public/data/scenario-B/features_info.csv","../public/data/scenario-B/intervals/knowledge_intervals.csv","../public/data/scenario-B/models_data.csv","../public/data/scenario-B/models_info.csv","components/ModelsMatrix/ModelsMatrix.js","components/Controls/Controls.js","App.js","serviceWorker.js","index.js"],"names":["map","./Grape Quality (scenario-A)/features_info.csv","./Grape Quality (scenario-A)/intervals/knowledge_intervals.csv","./Grape Quality (scenario-A)/models_data.csv","./Grape Quality (scenario-A)/models_info.csv","./scenario-B/features_info.csv","./scenario-B/intervals/knowledge_intervals.csv","./scenario-B/models_data.csv","./scenario-B/models_info.csv","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","p","ModelsMatrix","_ref","modelData","intervalData","featuresInfo","modelsInfo","refAnchor","useRef","_useState","useState","_useState2","slicedToArray","view","setView","useEffect","vegaEmbed","current","spec","actions","then","result","catch","console","error","chModelData","vega","changeset","remove","truthy","insert","chIntervalData","chFeaturesInfo","chModelsInfo","change","resize","run","react_default","a","createElement","ref","data_files_tree","require","reduce","dict","path","x","substring","split","splice","forEach","item","Controls","models","features","updateSelections","updateFiles","selectedProject","setSelectedProject","_useState3","_useState4","selectedIntervals","setSelectedIntervals","_useState5","_useState6","intervalDropdown","setIntervalDropdown","_useReducer","useReducer","state","newState","objectSpread","_useReducer2","modelsChecked","setModelsChecked","_useReducer3","_useReducer4","featuresChecked","setFeaturesChecked","names","d","model","res","val","length","feature","intervals","main","features_info","model_info","projectsList","concat","intervalsList","indexOf","react_select_dist_default","label","onChange","target","value","options","disabled","react_list_dist","react_list_dist_default","twoLine","dense","m","key","onClick","preventDefault","defineProperty","className","primaryText","model_label","score","secondaryText","dist_default","nativeControlId","checked","feature_label","App","files","setFiles","setModelData","setIntervalData","_useState7","_useState8","setFeaturesInfo","_useState9","_useState10","setModelsInfo","_useState11","_useState12","selectedModels","setSelectedModels","_useState13","_useState14","selectedFeatures","setSelectedFeatures","loader","Promise","all","load","_ref2","modelDataFile","intervalDataFile","featuresInfoFile","modelsInfoFile","info","read","type","parse","pop","digits","toString","labelFormatter","Intl","NumberFormat","minimumIntegerDigits","scoreFormatter","maximumFractionDigits","minimumFractionDigits","sort","b","i","format","intervalDataRead","modelDataRead","filter","find","x1","x2","agree","y1","expected_value","y2","fModelData","useMemo","includes","react_top_app_bar_dist_default","title","react_top_app_bar_dist","react_drawer_dist_default","components_Controls_Controls","modelsList","featureList","react_drawer_dist","components_ModelsMatrix_ModelsMatrix","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.40292522.chunk.js","sourcesContent":["var map = {\n\t\"./Grape Quality (scenario-A)/features_info.csv\": 58,\n\t\"./Grape Quality (scenario-A)/intervals/knowledge_intervals.csv\": 59,\n\t\"./Grape Quality (scenario-A)/models_data.csv\": 60,\n\t\"./Grape Quality (scenario-A)/models_info.csv\": 61,\n\t\"./scenario-B/features_info.csv\": 62,\n\t\"./scenario-B/intervals/knowledge_intervals.csv\": 63,\n\t\"./scenario-B/models_data.csv\": 64,\n\t\"./scenario-B/models_info.csv\": 65\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 57;","module.exports = __webpack_public_path__ + \"static/media/features_info.1ce84434.csv\";","module.exports = __webpack_public_path__ + \"static/media/knowledge_intervals.ceaf44b3.csv\";","module.exports = __webpack_public_path__ + \"static/media/models_data.5fecf2c8.csv\";","module.exports = __webpack_public_path__ + \"static/media/models_info.9658bd2b.csv\";","module.exports = __webpack_public_path__ + \"static/media/features_info.89b36add.csv\";","module.exports = __webpack_public_path__ + \"static/media/knowledge_intervals.ceaf44b3.csv\";","module.exports = __webpack_public_path__ + \"static/media/models_data.07106c22.csv\";","module.exports = __webpack_public_path__ + \"static/media/models_info.6c90e31d.csv\";","import React, { useState, useEffect, useRef } from \"react\";\r\nimport vegaEmbed, { vega } from \"vega-embed\";\r\nimport spec from \"./spec.vg.json\";\r\n\r\nconst ModelsMatrix = ({\r\n  modelData,\r\n  intervalData,\r\n  featuresInfo,\r\n  modelsInfo\r\n}) => {\r\n  const refAnchor = useRef();\r\n  const [view, setView] = useState(null);\r\n\r\n  useEffect(() => {\r\n    vegaEmbed(refAnchor.current, spec, { actions: false })\r\n      .then(result => setView(result.view))\r\n      .catch(console.error);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (view) {\r\n      const chModelData = vega\r\n        .changeset()\r\n        .remove(vega.truthy)\r\n        .insert(modelData);\r\n      const chIntervalData = vega\r\n        .changeset()\r\n        .remove(vega.truthy)\r\n        .insert(intervalData);\r\n      const chFeaturesInfo = vega\r\n        .changeset()\r\n        .remove(vega.truthy)\r\n        .insert(featuresInfo);\r\n      const chModelsInfo = vega\r\n        .changeset()\r\n        .remove(vega.truthy)\r\n        .insert(modelsInfo);\r\n      view\r\n        .change(\"intervalData\", chIntervalData)\r\n        .change(\"featuresInfo\", chFeaturesInfo)\r\n        .change(\"modelsInfo\", chModelsInfo)\r\n        .change(\"modelData\", chModelData)\r\n        .resize()\r\n        .run();\r\n    }\r\n  }, [view, modelData, intervalData, featuresInfo]);\r\n\r\n  return <div ref={refAnchor} id=\"vis\" />;\r\n};\r\n\r\nexport default ModelsMatrix;\r\n","import React, { useState, useEffect, useReducer } from \"react\";\r\nimport Checkbox from \"@material/react-checkbox\";\r\nimport Select from \"@material/react-select\";\r\nimport List, {\r\n  ListItem,\r\n  ListGroup,\r\n  ListGroupSubheader,\r\n  ListDivider,\r\n  ListItemText\r\n} from \"@material/react-list\";\r\n\r\nimport \"@material/react-checkbox/dist/checkbox.min.css\";\r\nimport \"@material/react-select/dist/select.min.css\";\r\nimport \"@material/react-list/dist/list.min.css\";\r\nimport \"./Controls.css\";\r\n\r\nvar files_in_data = require\r\n  .context(\"../../../public/data\", true, /\\.csv/)\r\n  .keys();\r\n\r\nvar data_files_tree = files_in_data.reduce(function(dict, path) {\r\n  var x = dict;\r\n  path = path.substring(1);\r\n  path\r\n    .split(\"/\")\r\n    .splice(1)\r\n    .forEach(function(item) {\r\n      if (!x[item]) {\r\n        x[item] = {};\r\n      }\r\n      x = x[item];\r\n    });\r\n  x.path = path;\r\n  return dict;\r\n}, {});\r\n\r\nconst Controls = ({ models, features, updateSelections, updateFiles }) => {\r\n  const [selectedProject, setSelectedProject] = useState(\"\");\r\n  const [selectedIntervals, setSelectedIntervals] = useState(\"\");\r\n  const [intervalDropdown, setIntervalDropdown] = useState(false);\r\n\r\n  const [modelsChecked, setModelsChecked] = useReducer(\r\n    (state, newState) => ({ ...state, ...newState }),\r\n    {}\r\n  );\r\n  const [featuresChecked, setFeaturesChecked] = useReducer(\r\n    (state, newState) => ({ ...state, ...newState }),\r\n    {}\r\n  );\r\n\r\n  // Check 2 by default\r\n  useEffect(() => {\r\n    const num = 2;\r\n    const names = models.map(d => d.model);\r\n    setModelsChecked(\r\n      names.reduce((res, val) => {\r\n        res[val] = Object.keys(res).length < num;\r\n        return res;\r\n      }, {})\r\n    );\r\n  }, [models]);\r\n\r\n  // Check all by default\r\n  useEffect(() => {\r\n    const names = features.map(d => d.feature);\r\n    setFeaturesChecked(\r\n      names.reduce((res, val) => {\r\n        res[val] = true;\r\n        return res;\r\n      }, {})\r\n    );\r\n  }, [features]);\r\n\r\n  //Update selected models\r\n  useEffect(() => {\r\n    updateSelections(modelsChecked, featuresChecked);\r\n  }, [modelsChecked, featuresChecked]);\r\n\r\n  useEffect(() => {\r\n    setSelectedIntervals(\"\");\r\n    if (selectedProject === \"\") {\r\n      setIntervalDropdown(false);\r\n    } else setIntervalDropdown(true);\r\n  }, [selectedProject]);\r\n\r\n  useEffect(() => {\r\n    if (intervalDropdown) {\r\n      let intervals = \"\";\r\n      const main = data_files_tree[selectedProject];\r\n      if (selectedIntervals && selectedIntervals !== \"**No Intervals**\")\r\n        intervals =\r\n          \"data\" + main[\"intervals\"][selectedIntervals + \".csv\"][\"path\"];\r\n      updateFiles({\r\n        intervals: intervals,\r\n        models: \"data\" + main[\"models_data.csv\"][\"path\"],\r\n        features_info: \"data\" + main[\"features_info.csv\"][\"path\"],\r\n        model_info: \"data\" + main[\"models_info.csv\"][\"path\"]\r\n      });\r\n    } else {\r\n      updateFiles(null);\r\n    }\r\n  }, [selectedIntervals]);\r\n\r\n  const projectsList = [\"\"].concat(Object.keys(data_files_tree));\r\n  let intervalsList = selectedProject\r\n    ? Object.keys(data_files_tree[selectedProject][\"intervals\"])\r\n    : [];\r\n\r\n  intervalsList = intervalsList.map(d => d.substring(0, d.indexOf(\".csv\")));\r\n  return (\r\n    <div>\r\n      <Select\r\n        label=\"Select Project\"\r\n        onChange={e => setSelectedProject(e.target.value)}\r\n        value={selectedProject}\r\n        options={projectsList}\r\n      />\r\n      <Select\r\n        disabled={!intervalDropdown}\r\n        label=\"Select Intervals\"\r\n        onChange={e => setSelectedIntervals(e.target.value)}\r\n        value={selectedIntervals}\r\n        options={[\"\", \"**No Intervals**\"].concat(intervalsList)}\r\n      />\r\n      <ListGroup>\r\n        <ListGroupSubheader>Models</ListGroupSubheader>\r\n        <List twoLine dense>\r\n          {models.map(m => (\r\n            <ListItem\r\n              key={m.model}\r\n              onClick={e => {\r\n                e.preventDefault();\r\n                setModelsChecked({ [m.model]: !modelsChecked[m.model] });\r\n              }}\r\n            >\r\n              <ListItemText\r\n                className=\"checkbox\"\r\n                primaryText={m.model_label + \" \" + m.score}\r\n                secondaryText={m.model}\r\n              />\r\n              <Checkbox\r\n                nativeControlId={m.model}\r\n                checked={modelsChecked[m.model]}\r\n                onChange={() =>\r\n                  setModelsChecked({ [m.model]: !modelsChecked[m.model] })\r\n                }\r\n              />\r\n            </ListItem>\r\n          ))}\r\n          <ListDivider />\r\n        </List>\r\n        <ListGroupSubheader>Features</ListGroupSubheader>\r\n        <List twoLine dense>\r\n          {features.map(m => (\r\n            <ListItem\r\n              key={m.feature}\r\n              onClick={e => {\r\n                e.preventDefault();\r\n                setFeaturesChecked({\r\n                  [m.feature]: !featuresChecked[m.feature]\r\n                });\r\n              }}\r\n            >\r\n              <ListItemText\r\n                className=\"checkbox\"\r\n                primaryText={m.feature_label}\r\n                secondaryText={m.feature}\r\n              />\r\n              <Checkbox\r\n                nativeControlId={m.feature}\r\n                checked={featuresChecked[m.feature]}\r\n                onChange={() =>\r\n                  setFeaturesChecked({\r\n                    [m.feature]: !featuresChecked[m.feature]\r\n                  })\r\n                }\r\n              />\r\n            </ListItem>\r\n          ))}\r\n          <ListDivider />\r\n        </List>\r\n      </ListGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Controls;\r\n","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { vega } from \"vega-embed\";\r\nimport ModelsMatrix from \"./components/ModelsMatrix\";\r\nimport Controls from \"./components/Controls\";\r\n\r\n//Material Components\r\nimport TopAppBar, { TopAppBarFixedAdjust } from \"@material/react-top-app-bar\";\r\nimport Drawer, { DrawerAppContent } from \"@material/react-drawer\";\r\n\r\n//Material CSS Files\r\nimport \"@material/react-top-app-bar/dist/top-app-bar.min.css\";\r\nimport \"@material/react-drawer/dist/drawer.min.css\";\r\n\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  const [files, setFiles] = useState(null);\r\n  const [modelData, setModelData] = useState([]);\r\n  const [intervalData, setIntervalData] = useState([]);\r\n  const [featuresInfo, setFeaturesInfo] = useState([]);\r\n  const [modelsInfo, setModelsInfo] = useState([]);\r\n\r\n  const [selectedModels, setSelectedModels] = useState([]);\r\n  const [selectedFeatures, setSelectedFeatures] = useState([]);\r\n\r\n  // Load data\r\n  useEffect(() => {\r\n    if (!files) {\r\n      setModelData([]);\r\n      setIntervalData([]);\r\n      setFeaturesInfo([]);\r\n      setModelsInfo([]);\r\n    } else {\r\n      var loader = vega.loader();\r\n      Promise.all([\r\n        loader.load(files.models),\r\n        loader.load(files.intervals),\r\n        loader.load(files.features_info),\r\n        loader.load(files.model_info)\r\n      ])\r\n        .then(\r\n          ([\r\n            modelDataFile,\r\n            intervalDataFile,\r\n            featuresInfoFile,\r\n            modelsInfoFile\r\n          ]) => {\r\n            // Generate Model alias and format score\r\n            let info = vega.read(modelsInfoFile, {\r\n              type: \"csv\",\r\n              parse: \"auto\"\r\n            });\r\n\r\n            const score = Object.keys(info[0]).pop(\"model\");\r\n            const digits = info.length.toString().length;\r\n            const labelFormatter = new Intl.NumberFormat(\"en-EN\", {\r\n              minimumIntegerDigits: digits\r\n            });\r\n            const scoreFormatter = new Intl.NumberFormat(\"en-EN\", {\r\n              maximumFractionDigits: 3,\r\n              minimumFractionDigits: 3\r\n            });\r\n            info = info.sort((a, b) => a[score] - b[score]);\r\n            info = info.map((d, i) => ({\r\n              model: d.model,\r\n              model_label: \"M\" + labelFormatter.format(i),\r\n              score: `(${score}: ${scoreFormatter.format(d[score])})`\r\n            }));\r\n\r\n            // Generate agreement between model and intervals\r\n            const intervalDataRead = vega.read(intervalDataFile, {\r\n              type: \"csv\",\r\n              parse: \"auto\"\r\n            });\r\n            const modelDataRead = vega.read(modelDataFile, {\r\n              type: \"csv\",\r\n              parse: \"auto\"\r\n            });\r\n\r\n            const gen_agree = d => {\r\n              const i = intervalDataRead\r\n                .filter(i => i.feature === d.feature)\r\n                .find(i => {\r\n                  return +i.x1 <= +d.value && +d.value <= +i.x2;\r\n                });\r\n\r\n              let label = null;\r\n              let agree = null;\r\n              if (i) {\r\n                label = i.label;\r\n                agree = +(\r\n                  +i.y1 <= +d.expected_value && +d.expected_value <= +i.y2\r\n                );\r\n              }\r\n\r\n              return {\r\n                ...d,\r\n                label,\r\n                agree\r\n              };\r\n            };\r\n\r\n            setModelData(modelDataRead.map(gen_agree));\r\n            setModelsInfo(info);\r\n            setIntervalData(intervalDataRead);\r\n            setFeaturesInfo(\r\n              vega.read(featuresInfoFile, { type: \"csv\", parse: \"auto\" })\r\n            );\r\n          }\r\n        )\r\n        .catch(console.error);\r\n    }\r\n  }, [files]);\r\n\r\n  const fModelData = useMemo(() => {\r\n    if (!selectedModels.length || !selectedFeatures.length) return [];\r\n    return modelData.filter(d => {\r\n      return (\r\n        selectedModels.includes(d.model) && selectedFeatures.includes(d.feature)\r\n      );\r\n    });\r\n  }, [selectedModels, selectedFeatures]);\r\n\r\n  const updateSelections = (models, features) => {\r\n    const modelsList = Object.keys(models).filter(function(e) {\r\n      return models[e];\r\n    });\r\n    const featureList = Object.keys(features).filter(function(e) {\r\n      return features[e];\r\n    });\r\n    setSelectedModels(modelsList);\r\n    setSelectedFeatures(featureList);\r\n  };\r\n\r\n  return (\r\n    <div className=\"drawer-container\">\r\n      <TopAppBar title=\"AHMOSE: Augmented by Human Model Selection\" />\r\n      <TopAppBarFixedAdjust className=\"top-app-bar-fix-adjust\">\r\n        <Drawer className=\"drawer\">\r\n          <Controls\r\n            models={modelsInfo}\r\n            features={featuresInfo}\r\n            updateSelections={updateSelections}\r\n            updateFiles={setFiles}\r\n          />\r\n        </Drawer>\r\n        <DrawerAppContent className=\"drawer-app-content\">\r\n          {fModelData.length ? (\r\n            <ModelsMatrix\r\n              modelData={fModelData}\r\n              intervalData={intervalData}\r\n              featuresInfo={featuresInfo}\r\n              modelsInfo={modelsInfo}\r\n            />\r\n          ) : null}\r\n        </DrawerAppContent>\r\n      </TopAppBarFixedAdjust>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}